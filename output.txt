EXPERIMENT-2
No of neurons in layer: 10
activation function: softmax
optimizer : sgd,SQD ,adam
Loss function: categorical_crossentropy
metrics: accuracy
epochs :30


batch_size: 32 

validation_data: (x_test,y_test)




PS C:\Users\SRI LAXMI DOCUMENT\Desktop\rishi\DL-lab> python -u "c:\Users\SRI LAXMI DOCUMENT\Desktop\rishi\DL-lab\MLP.py"
2025-07-25 21:09:02.421207: I tensorflow/core/util/port.cc:153] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.
2025-07-25 21:09:03.482878: I tensorflow/core/util/port.cc:153] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.
C:\Users\SRI LAXMI DOCUMENT\AppData\Local\Programs\Python\Python312\Lib\site-packages\keras\src\layers\reshaping\flatten.py:37: UserWarning: Do not pass an `input_shape`/`input_dim` argument to a layer. When using Sequential models, prefer using an `Input(shape)` object as the first layer in the model instead.     
  super().__init__(**kwargs)
2025-07-25 21:09:10.522248: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.
To enable the following instructions: SSE3 SSE4.1 SSE4.2 AVX AVX2 AVX512F AVX512_VNNI FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.
Epoch 1/10
   1/1875 ━━━━━━━━━━━━━━━━━━━━ 15:45 504ms/step - accuracy: 0.0312 - loss: 2.45  19/1875 ━━━━━━━━━━━━━━━━━━━━ 5s 3ms/step - accuracy: 0.0768 - loss: 2.3317   
1875/1875 ━━━━━━━━━━━━━━━━━━━━ 6s 3ms/step - accuracy: 0.7144 - loss: 1.1276 - val_accuracy: 0.8805 - val_loss: 0.4774
Epoch 2/10
1875/1875 ━━━━━━━━━━━━━━━━━━━━ 6s 3ms/step - accuracy: 0.8775 - loss: 0.4752 - val_accuracy: 0.8946 - val_loss: 0.3986
Epoch 3/10
1875/1875 ━━━━━━━━━━━━━━━━━━━━ 6s 3ms/step - accuracy: 0.8885 - loss: 0.4149 - val_accuracy: 0.9010 - val_loss: 0.3668
Epoch 4/10
1875/1875 ━━━━━━━━━━━━━━━━━━━━ 6s 3ms/step - accuracy: 0.8981 - loss: 0.3782 - val_accuracy: 0.9059 - val_loss: 0.3476
Epoch 5/10
1875/1875 ━━━━━━━━━━━━━━━━━━━━ 6s 3ms/step - accuracy: 0.9039 - loss: 0.3562 - val_accuracy: 0.9088 - val_loss: 0.3351
Epoch 6/10
1875/1875 ━━━━━━━━━━━━━━━━━━━━ 6s 3ms/step - accuracy: 0.9012 - loss: 0.3515 - val_accuracy: 0.9115 - val_loss: 0.3261
Epoch 7/10
1875/1875 ━━━━━━━━━━━━━━━━━━━━ 6s 3ms/step - accuracy: 0.9051 - loss: 0.3358 - val_accuracy: 0.9126 - val_loss: 0.3196
Epoch 8/10
1875/1875 ━━━━━━━━━━━━━━━━━━━━ 6s 3ms/step - accuracy: 0.9069 - loss: 0.3355 - val_accuracy: 0.9154 - val_loss: 0.3133
Epoch 9/10
1875/1875 ━━━━━━━━━━━━━━━━━━━━ 6s 3ms/step - accuracy: 0.9092 - loss: 0.3297 - val_accuracy: 0.9166 - val_loss: 0.3091
Epoch 10/10
1875/1875 ━━━━━━━━━━━━━━━━━━━━ 6s 3ms/step - accuracy: 0.9103 - loss: 0.3216 - val_accuracy: 0.9166 - val_loss: 0.3054
313/313 ━━━━━━━━━━━━━━━━━━━━ 1s 3ms/step - accuracy: 0.9039 - loss: 0.3491  

Test loss:0.3054160177707672,
Test Accuracy:0.9165999889373779

Week-3

PS C:\Users\SRI LAXMI DOCUMENT\Desktop\rishi\DL-lab> python -u "c:\Users\SRI LAXMI DOCUMENT\Desktop\rishi\DL-lab\week3.py"
2025-08-08 07:34:31.116676: I tensorflow/core/util/port.cc:153] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.
2025-08-08 07:34:33.396082: I tensorflow/core/util/port.cc:153] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.
C:\Users\SRI LAXMI DOCUMENT\AppData\Local\Programs\Python\Python312\Lib\site-packages\keras\src\layers\reshaping\flatten.py:37: UserWarning: Do not pass an `input_shape`/`input_dim` argument to a layer. When using Sequential models, prefer using an `Input(shape)` object as the first layer in the model instead.
  super().__init__(**kwargs)
2025-08-08 07:34:42.254841: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.
To enable the following instructions: SSE3 SSE4.1 SSE4.2 AVX AVX2 AVX512F AVX512_VNNI FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.
Epoch 1/50
625/625 ━━━━━━━━━━━━━━━━━━━━ 24s 35ms/step - accuracy: 0.2379 - loss: 8.1021 - val_accuracy: 0.2470 - val_loss: 3.8929
Epoch 2/50
625/625 ━━━━━━━━━━━━━━━━━━━━ 23s 38ms/step - accuracy: 0.2991 - loss: 3.0194 - val_accuracy: 0.2912 - val_loss: 2.6899
Epoch 3/50
625/625 ━━━━━━━━━━━━━━━━━━━━ 26s 42ms/step - accuracy: 0.3352 - loss: 2.3137 - val_accuracy: 0.3454 - val_loss: 2.1659
Epoch 4/50
625/625 ━━━━━━━━━━━━━━━━━━━━ 26s 41ms/step - accuracy: 0.3663 - loss: 2.0172 - val_accuracy: 0.3634 - val_loss: 1.9882
Epoch 5/50
625/625 ━━━━━━━━━━━━━━━━━━━━ 25s 40ms/step - accuracy: 0.3870 - loss: 1.8672 - val_accuracy: 0.3643 - val_loss: 1.9410
Epoch 6/50
625/625 ━━━━━━━━━━━━━━━━━━━━ 25s 39ms/step - accuracy: 0.4053 - loss: 1.7577 - val_accuracy: 0.3823 - val_loss: 1.8515
Epoch 7/50
625/625 ━━━━━━━━━━━━━━━━━━━━ 20s 32ms/step - accuracy: 0.4221 - loss: 1.6836 - val_accuracy: 0.3891 - val_loss: 1.8014
Epoch 8/50
625/625 ━━━━━━━━━━━━━━━━━━━━ 20s 32ms/step - accuracy: 0.4288 - loss: 1.6412 - val_accuracy: 0.3969 - val_loss: 1.7696
Epoch 9/50
625/625 ━━━━━━━━━━━━━━━━━━━━ 20s 32ms/step - accuracy: 0.4406 - loss: 1.5895 - val_accuracy: 0.4120 - val_loss: 1.7311
Epoch 10/50
625/625 ━━━━━━━━━━━━━━━━━━━━ 20s 31ms/step - accuracy: 0.4538 - loss: 1.5588 - val_accuracy: 0.4123 - val_loss: 1.7095
Epoch 11/50
625/625 ━━━━━━━━━━━━━━━━━━━━ 20s 31ms/step - accuracy: 0.4590 - loss: 1.5343 - val_accuracy: 0.4036 - val_loss: 1.7468
Epoch 12/50
625/625 ━━━━━━━━━━━━━━━━━━━━ 19s 30ms/step - accuracy: 0.4628 - loss: 1.5192 - val_accuracy: 0.4329 - val_loss: 1.6391
Epoch 13/50
625/625 ━━━━━━━━━━━━━━━━━━━━ 20s 31ms/step - accuracy: 0.4723 - loss: 1.4893 - val_accuracy: 0.4318 - val_loss: 1.6489
Epoch 14/50
625/625 ━━━━━━━━━━━━━━━━━━━━ 19s 31ms/step - accuracy: 0.4753 - loss: 1.4776 - val_accuracy: 0.4301 - val_loss: 1.7041
Epoch 15/50
625/625 ━━━━━━━━━━━━━━━━━━━━ 19s 31ms/step - accuracy: 0.4863 - loss: 1.4435 - val_accuracy: 0.4142 - val_loss: 1.7534
Epoch 16/50
625/625 ━━━━━━━━━━━━━━━━━━━━ 24s 38ms/step - accuracy: 0.4962 - loss: 1.4094 - val_accuracy: 0.4521 - val_loss: 1.5932
Epoch 17/50
625/625 ━━━━━━━━━━━━━━━━━━━━ 20s 32ms/step - accuracy: 0.5055 - loss: 1.3934 - val_accuracy: 0.4565 - val_loss: 1.6213
Epoch 18/50
625/625 ━━━━━━━━━━━━━━━━━━━━ 20s 32ms/step - accuracy: 0.5117 - loss: 1.3710 - val_accuracy: 0.4304 - val_loss: 1.7184
Epoch 19/50
625/625 ━━━━━━━━━━━━━━━━━━━━ 20s 32ms/step - accuracy: 0.5210 - loss: 1.3465 - val_accuracy: 0.4605 - val_loss: 1.5904
Epoch 20/50
625/625 ━━━━━━━━━━━━━━━━━━━━ 20s 32ms/step - accuracy: 0.5345 - loss: 1.3036 - val_accuracy: 0.4687 - val_loss: 1.6078
Epoch 21/50
625/625 ━━━━━━━━━━━━━━━━━━━━ 19s 31ms/step - accuracy: 0.5391 - loss: 1.2911 - val_accuracy: 0.4625 - val_loss: 1.6002
Epoch 22/50
625/625 ━━━━━━━━━━━━━━━━━━━━ 19s 30ms/step - accuracy: 0.5509 - loss: 1.2603 - val_accuracy: 0.4628 - val_loss: 1.6059
Epoch 23/50
625/625 ━━━━━━━━━━━━━━━━━━━━ 19s 30ms/step - accuracy: 0.5582 - loss: 1.2394 - val_accuracy: 0.4758 - val_loss: 1.6095
Epoch 24/50
625/625 ━━━━━━━━━━━━━━━━━━━━ 19s 30ms/step - accuracy: 0.5670 - loss: 1.2162 - val_accuracy: 0.4770 - val_loss: 1.5733
Epoch 25/50
625/625 ━━━━━━━━━━━━━━━━━━━━ 19s 30ms/step - accuracy: 0.5795 - loss: 1.1848 - val_accuracy: 0.4794 - val_loss: 1.5820
Epoch 26/50
625/625 ━━━━━━━━━━━━━━━━━━━━ 22s 35ms/step - accuracy: 0.5873 - loss: 1.1575 - val_accuracy: 0.4672 - val_loss: 1.6546
Epoch 27/50
625/625 ━━━━━━━━━━━━━━━━━━━━ 22s 35ms/step - accuracy: 0.5985 - loss: 1.1309 - val_accuracy: 0.4910 - val_loss: 1.5660
Epoch 28/50
625/625 ━━━━━━━━━━━━━━━━━━━━ 21s 34ms/step - accuracy: 0.6043 - loss: 1.1125 - val_accuracy: 0.4820 - val_loss: 1.6488
Epoch 29/50
625/625 ━━━━━━━━━━━━━━━━━━━━ 20s 31ms/step - accuracy: 0.6183 - loss: 1.0740 - val_accuracy: 0.4888 - val_loss: 1.6063
Epoch 30/50
625/625 ━━━━━━━━━━━━━━━━━━━━ 21s 34ms/step - accuracy: 0.6237 - loss: 1.0613 - val_accuracy: 0.4973 - val_loss: 1.6098
Epoch 31/50
625/625 ━━━━━━━━━━━━━━━━━━━━ 21s 34ms/step - accuracy: 0.6346 - loss: 1.0361 - val_accuracy: 0.4915 - val_loss: 1.6485
Epoch 32/50
625/625 ━━━━━━━━━━━━━━━━━━━━ 19s 31ms/step - accuracy: 0.6407 - loss: 1.0099 - val_accuracy: 0.5087 - val_loss: 1.6016
Epoch 34/50
625/625 ━━━━━━━━━━━━━━━━━━━━ 22s 36ms/step - accuracy: 0.6583 - loss: 0.9691 - val_accuracy: 0.5032 - val_loss: 1.6384
Epoch 35/50
625/625 ━━━━━━━━━━━━━━━━━━━━ 80s 128ms/step - accuracy: 0.6678 - loss: 0.9373 - val_accuracy: 0.4930 - val_loss: 1.7406
Epoch 36/50
625/625 ━━━━━━━━━━━━━━━━━━━━ 20s 32ms/step - accuracy: 0.6759 - loss: 0.9149 - val_accuracy: 0.4955 - val_loss: 1.7081
Epoch 37/50
625/625 ━━━━━━━━━━━━━━━━━━━━ 20s 32ms/step - accuracy: 0.6856 - loss: 0.8841 - val_accuracy: 0.4901 - val_loss: 1.7390
Epoch 38/50
625/625 ━━━━━━━━━━━━━━━━━━━━ 20s 32ms/step - accuracy: 0.6924 - loss: 0.8701 - val_accuracy: 0.4958 - val_loss: 1.7240
Epoch 39/50
625/625 ━━━━━━━━━━━━━━━━━━━━ 20s 31ms/step - accuracy: 0.7031 - loss: 0.8366 - val_accuracy: 0.4947 - val_loss: 1.7983
Epoch 40/50
625/625 ━━━━━━━━━━━━━━━━━━━━ 19s 31ms/step - accuracy: 0.7077 - loss: 0.8242 - val_accuracy: 0.4859 - val_loss: 1.8163
Epoch 41/50
625/625 ━━━━━━━━━━━━━━━━━━━━ 25s 41ms/step - accuracy: 0.7179 - loss: 0.7995 - val_accuracy: 0.5011 - val_loss: 1.7772
Epoch 42/50
625/625 ━━━━━━━━━━━━━━━━━━━━ 252s 404ms/step - accuracy: 0.7245 - loss: 0.7801 - val_accuracy: 0.4944 - val_loss: 1.8223
Epoch 43/50
625/625 ━━━━━━━━━━━━━━━━━━━━ 19s 30ms/step - accuracy: 0.7292 - loss: 0.7622 - val_accuracy: 0.5061 - val_loss: 1.8309
Epoch 44/50
625/625 ━━━━━━━━━━━━━━━━━━━━ 20s 31ms/step - accuracy: 0.7347 - loss: 0.7504 - val_accuracy: 0.4967 - val_loss: 1.9125
Epoch 45/50
625/625 ━━━━━━━━━━━━━━━━━━━━ 25s 40ms/step - accuracy: 0.7437 - loss: 0.7330 - val_accuracy: 0.4954 - val_loss: 1.9196
Epoch 46/50
625/625 ━━━━━━━━━━━━━━━━━━━━ 19s 30ms/step - accuracy: 0.7510 - loss: 0.7048 - val_accuracy: 0.4864 - val_loss: 1.9790
Epoch 47/50
625/625 ━━━━━━━━━━━━━━━━━━━━ 19s 30ms/step - accuracy: 0.7576 - loss: 0.6884 - val_accuracy: 0.5072 - val_loss: 1.9056
Epoch 48/50
625/625 ━━━━━━━━━━━━━━━━━━━━ 19s 31ms/step - accuracy: 0.7628 - loss: 0.6711 - val_accuracy: 0.4972 - val_loss: 2.0177
Epoch 49/50
625/625 ━━━━━━━━━━━━━━━━━━━━ 21s 33ms/step - accuracy: 0.7696 - loss: 0.6513 - val_accuracy: 0.4952 - val_loss: 2.0430
Epoch 50/50
625/625 ━━━━━━━━━━━━━━━━━━━━ 19s 30ms/step - accuracy: 0.7760 - loss: 0.6342 - val_accuracy: 0.4929 - val_loss: 2.0616
313/313 ━━━━━━━━━━━━━━━━━━━━ 1s 4ms/step - accuracy: 0.4884 - loss: 2.0132 
0.48840001225471497
313/313 ━━━━━━━━━━━━━━━━━━━━ 1s 4ms/step   
Predicted label: 8


Week 3-2
tructions in performance-critical operations.
To enable the following instructions: SSE3 SSE4.1 SSE4.2 AVX AVX2 AVX512F AVX512_VNNI FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.
Epoch 1/50
624/625 ━━━━━━━━━━━━━━━━━━━━ 0s 20ms/step - accuracy: 0.2994 - loss: 2.3512WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`.
625/625 ━━━━━━━━━━━━━━━━━━━━ 15s 22ms/step - accuracy: 0.3751 - loss: 1.8194 - val_accuracy: 0.4634 - val_loss: 1.4861
Epoch 2/50
623/625 ━━━━━━━━━━━━━━━━━━━━ 0s 21ms/step - accuracy: 0.4977 - loss: 1.4011WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`.
625/625 ━━━━━━━━━━━━━━━━━━━━ 14s 22ms/step - accuracy: 0.5132 - loss: 1.3651 - val_accuracy: 0.5298 - val_loss: 1.3272
Epoch 3/50
623/625 ━━━━━━━━━━━━━━━━━━━━ 0s 21ms/step - accuracy: 0.5731 - loss: 1.2097WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`.
625/625 ━━━━━━━━━━━━━━━━━━━━ 14s 23ms/step - accuracy: 0.5749 - loss: 1.2037 - val_accuracy: 0.5575 - val_loss: 1.2649
Epoch 4/50
625/625 ━━━━━━━━━━━━━━━━━━━━ 0s 21ms/step - accuracy: 0.6284 - loss: 1.0556WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`.
625/625 ━━━━━━━━━━━━━━━━━━━━ 14s 23ms/step - accuracy: 0.6293 - loss: 1.0572 - val_accuracy: 0.5813 - val_loss: 1.2174
Epoch 5/50
625/625 ━━━━━━━━━━━━━━━━━━━━ 0s 21ms/step - accuracy: 0.6763 - loss: 0.9221WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`.
625/625 ━━━━━━━━━━━━━━━━━━━━ 14s 23ms/step - accuracy: 0.6739 - loss: 0.9296 - val_accuracy: 0.6094 - val_loss: 1.1551
Epoch 6/50
625/625 ━━━━━━━━━━━━━━━━━━━━ 14s 23ms/step - accuracy: 0.7226 - loss: 0.7976 - val_accuracy: 0.6070 - val_loss: 1.1904
Epoch 7/50
625/625 ━━━━━━━━━━━━━━━━━━━━ 14s 23ms/step - accuracy: 0.7680 - loss: 0.6692 - val_accuracy: 0.6117 - val_loss: 1.2258
Epoch 8/50
625/625 ━━━━━━━━━━━━━━━━━━━━ 14s 23ms/step - accuracy: 0.8155 - loss: 0.5381 - val_accuracy: 0.6234 - val_loss: 1.1990
Epoch 9/50
625/625 ━━━━━━━━━━━━━━━━━━━━ 22s 34ms/step - accuracy: 0.8597 - loss: 0.4209 - val_accuracy: 0.6204 - val_loss: 1.3214
Epoch 10/50
625/625 ━━━━━━━━━━━━━━━━━━━━ 31s 50ms/step - accuracy: 0.8953 - loss: 0.3192 - val_accuracy: 0.6221 - val_loss: 1.3906
Epoch 11/50
625/625 ━━━━━━━━━━━━━━━━━━━━ 21s 34ms/step - accuracy: 0.9255 - loss: 0.2328 - val_accuracy: 0.6244 - val_loss: 1.5244
Epoch 12/50
625/625 ━━━━━━━━━━━━━━━━━━━━ 21s 34ms/step - accuracy: 0.9489 - loss: 0.1641 - val_accuracy: 0.6238 - val_loss: 1.6552
Epoch 13/50
625/625 ━━━━━━━━━━━━━━━━━━━━ 22s 34ms/step - accuracy: 0.9617 - loss: 0.1275 - val_accuracy: 0.6182 - val_loss: 1.8002
Epoch 14/50
625/625 ━━━━━━━━━━━━━━━━━━━━ 17s 26ms/step - accuracy: 0.9618 - loss: 0.1197 - val_accuracy: 0.6203 - val_loss: 1.8947
Epoch 15/50
625/625 ━━━━━━━━━━━━━━━━━━━━ 14s 22ms/step - accuracy: 0.9686 - loss: 0.1010 - val_accuracy: 0.6315 - val_loss: 1.8863
Epoch 16/50
625/625 ━━━━━━━━━━━━━━━━━━━━ 14s 22ms/step - accuracy: 0.9767 - loss: 0.0777 - val_accuracy: 0.6286 - val_loss: 2.0536
Epoch 17/50
625/625 ━━━━━━━━━━━━━━━━━━━━ 16s 26ms/step - accuracy: 0.9801 - loss: 0.0653 - val_accuracy: 0.6173 - val_loss: 2.1472
Epoch 18/50
625/625 ━━━━━━━━━━━━━━━━━━━━ 23s 36ms/step - accuracy: 0.9779 - loss: 0.0721 - val_accuracy: 0.6300 - val_loss: 2.1941
Epoch 19/50
625/625 ━━━━━━━━━━━━━━━━━━━━ 84s 134ms/step - accuracy: 0.9775 - loss: 0.0701 - val_accuracy: 0.6188 - val_loss: 2.2173
Epoch 20/50
625/625 ━━━━━━━━━━━━━━━━━━━━ 14s 23ms/step - accuracy: 0.9824 - loss: 0.0559 - val_accuracy: 0.6261 - val_loss: 2.2804
Epoch 21/50
625/625 ━━━━━━━━━━━━━━━━━━━━ 14s 23ms/step - accuracy: 0.9821 - loss: 0.0586 - val_accuracy: 0.6274 - val_loss: 2.2713
Epoch 22/50
625/625 ━━━━━━━━━━━━━━━━━━━━ 14s 23ms/step - accuracy: 0.9784 - loss: 0.0661 - val_accuracy: 0.6343 - val_loss: 2.1671
Epoch 23/50
625/625 ━━━━━━━━━━━━━━━━━━━━ 20s 31ms/step - accuracy: 0.9863 - loss: 0.0431 - val_accuracy: 0.6264 - val_loss: 2.3637
Epoch 24/50
625/625 ━━━━━━━━━━━━━━━━━━━━ 410s 657ms/step - accuracy: 0.9861 - loss: 0.0460 - val_accuracy: 0.6341 - val_loss: 2.3657
Epoch 25/50
625/625 ━━━━━━━━━━━━━━━━━━━━ 16s 25ms/step - accuracy: 0.9857 - loss: 0.0436 - val_accuracy: 0.6202 - val_loss: 2.4682
Epoch 26/50
625/625 ━━━━━━━━━━━━━━━━━━━━ 15s 24ms/step - accuracy: 0.9820 - loss: 0.0550 - val_accuracy: 0.6372 - val_loss: 2.3864
Epoch 27/50
625/625 ━━━━━━━━━━━━━━━━━━━━ 15s 24ms/step - accuracy: 0.9894 - loss: 0.0349 - val_accuracy: 0.6373 - val_loss: 2.4921
Epoch 28/50
625/625 ━━━━━━━━━━━━━━━━━━━━ 19s 31ms/step - accuracy: 0.9856 - loss: 0.0428 - val_accuracy: 0.6335 - val_loss: 2.5383
Epoch 29/50
625/625 ━━━━━━━━━━━━━━━━━━━━ 104s 166ms/step - accuracy: 0.9862 - loss: 0.0427 - val_accuracy: 0.6298 - val_loss: 2.5242
Epoch 30/50
625/625 ━━━━━━━━━━━━━━━━━━━━ 15s 24ms/step - accuracy: 0.9894 - loss: 0.0329 - val_accuracy: 0.6153 - val_loss: 2.7615
Epoch 31/50
625/625 ━━━━━━━━━━━━━━━━━━━━ 14s 23ms/step - accuracy: 0.9848 - loss: 0.0476 - val_accuracy: 0.6293 - val_loss: 2.5770
Epoch 32/50
625/625 ━━━━━━━━━━━━━━━━━━━━ 14s 23ms/step - accuracy: 0.9901 - loss: 0.0299 - val_accuracy: 0.6327 - val_loss: 2.5883
Epoch 33/50
625/625 ━━━━━━━━━━━━━━━━━━━━ 17s 27ms/step - accuracy: 0.9870 - loss: 0.0408 - val_accuracy: 0.6326 - val_loss: 2.6128
Epoch 34/50
625/625 ━━━━━━━━━━━━━━━━━━━━ 57s 91ms/step - accuracy: 0.9923 - loss: 0.0251 - val_accuracy: 0.6103 - val_loss: 2.9839
Epoch 35/50
625/625 ━━━━━━━━━━━━━━━━━━━━ 14s 23ms/step - accuracy: 0.9834 - loss: 0.0510 - val_accuracy: 0.6375 - val_loss: 2.5532
Epoch 36/50
625/625 ━━━━━━━━━━━━━━━━━━━━ 14s 23ms/step - accuracy: 0.9952 - loss: 0.0165 - val_accuracy: 0.6338 - val_loss: 2.8560
Epoch 37/50
625/625 ━━━━━━━━━━━━━━━━━━━━ 24s 28ms/step - accuracy: 0.9843 - loss: 0.0489 - val_accuracy: 0.6317 - val_loss: 2.7769
Epoch 38/50
625/625 ━━━━━━━━━━━━━━━━━━━━ 76s 122ms/step - accuracy: 0.9911 - loss: 0.0284 - val_accuracy: 0.6289 - val_loss: 2.7041
Epoch 39/50
625/625 ━━━━━━━━━━━━━━━━━━━━ 15s 23ms/step - accuracy: 0.9912 - loss: 0.0275 - val_accuracy: 0.6255 - val_loss: 2.8781
Epoch 40/50
625/625 ━━━━━━━━━━━━━━━━━━━━ 6379s 10s/step - accuracy: 0.9873 - loss: 0.0384 - val_accuracy: 0.6357 - val_loss: 2.7495
Epoch 41/50
625/625 ━━━━━━━━━━━━━━━━━━━━ 23s 36ms/step - accuracy: 0.9909 - loss: 0.0288 - val_accuracy: 0.6335 - val_loss: 2.7768
Epoch 42/50
625/625 ━━━━━━━━━━━━━━━━━━━━ 17s 28ms/step - accuracy: 0.9921 - loss: 0.0245 - val_accuracy: 0.6221 - val_loss: 2.9061
Epoch 43/50
625/625 ━━━━━━━━━━━━━━━━━━━━ 22s 36ms/step - accuracy: 0.9894 - loss: 0.0327 - val_accuracy: 0.6228 - val_loss: 2.8518
Epoch 44/50
625/625 ━━━━━━━━━━━━━━━━━━━━ 16s 26ms/step - accuracy: 0.9917 - loss: 0.0266 - val_accuracy: 0.6325 - val_loss: 2.8955
Epoch 45/50
625/625 ━━━━━━━━━━━━━━━━━━━━ 14s 23ms/step - accuracy: 0.9940 - loss: 0.0191 - val_accuracy: 0.6330 - val_loss: 3.0471
Epoch 46/50
625/625 ━━━━━━━━━━━━━━━━━━━━ 14s 23ms/step - accuracy: 0.9860 - loss: 0.0437 - val_accuracy: 0.6262 - val_loss: 2.8468
Epoch 47/50
625/625 ━━━━━━━━━━━━━━━━━━━━ 15s 24ms/step - accuracy: 0.9930 - loss: 0.0213 - val_accuracy: 0.6323 - val_loss: 2.9799
Epoch 48/50
625/625 ━━━━━━━━━━━━━━━━━━━━ 14s 23ms/step - accuracy: 0.9924 - loss: 0.0232 - val_accuracy: 0.6300 - val_loss: 2.9624
Epoch 49/50
625/625 ━━━━━━━━━━━━━━━━━━━━ 15s 24ms/step - accuracy: 0.9885 - loss: 0.0344 - val_accuracy: 0.6381 - val_loss: 2.9107
Epoch 50/50
625/625 ━━━━━━━━━━━━━━━━━━━━ 14s 23ms/step - accuracy: 0.9931 - loss: 0.0220 - val_accuracy: 0.6275 - val_loss: 3.1296
313/313 ━━━━━━━━━━━━━━━━━━━━ 1s 4ms/step - accuracy: 0.6193 - loss: 3.1979  
0.6193000078201294
313/313 ━━━━━━━━━━━━━━━━━━━━ 2s 4ms/step   
Predicted label: 8